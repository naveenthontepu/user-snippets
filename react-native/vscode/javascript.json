{
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"Create a basic component": {
		"prefix": "bc",
		"body": [
			"import React, { Component } from 'react';",
			"import {",
				"\tView,",
				"\tText,",
			"} from 'react-native';",
			"",
			"class $TM_FILENAME extends Component {",
				"\trender() {",
					"\t\treturn (",
						"\t\t\t<View>",
							"\t\t\t\t<Text>hello world</Text>",
						"\t\t\t</View>",	
					"\t\t);",
				"\t}",
			"}",
			"export default $TM_FILENAME;",
			""
		],
		"description": "Log output to console"
	},
	"Create a basic redux component": {
		"prefix": "rc",
		"body": [
			"import React, { Component } from 'react';",
			"import {",
				"\tView,",
				"\tText,",
			"} from 'react-native';",
			"import { connect } from 'react-redux';",
			"",
			"class $TM_FILENAME extends Component {",
				"\trender() {",
					"\t\treturn (",
						"\t\t\t<View>",
							"\t\t\t\t<Text>hello world</Text>",
						"\t\t\t</View>",	
					"\t\t);",
				"\t}",
			"}",
			"",
			"const mapToProps = ({ $1 }) => {",
				"\tconst { $2 } = $1;",
				"\treturn { $2 };",
			"};",	
			"export default connect(mapToProps)($TM_FILENAME);",
			""
		],
		"description": "Log output to console"
	},
	"Create action" :{
		"prefix": "caction",
		"body": [
			"{",
				"\ttype: types.$1",
				"\tpayload: $2",
			"}"
		],
		"description": "creates an action"
	},
	"Create thunk action":{
		"prefix": "taction",
		"body": [
			"export const $1 = ($2) => {",
				"\treturn (dispatch) => {",
				"\t}",
			"};"
		],
		"description": "creates a thunk action"
	},
	"Create reducer": {
		"prefix": "reducer",
		"body": [
			"import types from '../actions/types';",
			"import { createNewState } from './ReducerUtil';",
			"const INITIAL_STATE = {",
			"};",
			"export default (state = INITIAL_STATE, action) => {",
				"\tswitch (action.type) {",
					"\t\tcase types.$1:",
					"\t\t\treturn createNewState(state,{$2: action.payload});",
					"\t\tdefault:",
					"\t\t\treturn state;",
				"\t}",
			"};"
		],
		"description": "create a default reducer"
	},
	"Reducer switch case":{
		"prefix": "rcase",
		"body": [
			"case types.$1:",
			"\treturn createNewState(state, );"
		],
		"description": "reducer switch case"
	}
}